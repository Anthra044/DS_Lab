#include <stdio.h>
#include <stdlib.h>

struct Node {
    struct Node *prev;
    int data;
    struct Node *next;
};

typedef struct Node node;

node *start = NULL, *curr = NULL;

void create_dll() {
    node *new1 = (node *)malloc(sizeof(node));
    printf("Enter element: ");
    scanf("%d", &new1->data);
    new1->prev = NULL;
    new1->next = NULL;
    start = new1;
    curr = new1;

    char ch;
    while (1) {
        printf("Do you want to add another element (Y/N): ");
        scanf(" %c", &ch);
        if (ch == 'Y' || ch == 'y') {
            new1 = (node *)malloc(sizeof(node));
            printf("Enter element: ");
            scanf("%d", &new1->data);
            new1->prev = curr;
            new1->next = NULL;
            curr->next = new1;
            curr = new1;
        } else {
            curr->next = NULL;
            return;
        }
    }
}

void insert_left() {
    node *new1 = (node *)malloc(sizeof(node));
    printf("Enter element: ");
    scanf("%d", &new1->data);
    printf("Enter position: ");
    int pos;
    scanf("%d", &pos);

    if (pos == 1) {
        new1->next = start;
        if (start != NULL) {
            start->prev = new1;
        }
        new1->prev = NULL;
        start = new1;
        return;
    }

    int i = 1;
    node *temp = start;
    while (i < pos - 1 && temp != NULL) {
        temp = temp->next;
        i++;
    }

    if (temp == NULL) {
        printf("Entered position is greater than the number of elements.\n");
        free(new1);
        return;
    }

    new1->next = temp->next;
    new1->prev = temp;

    if (temp->next != NULL) {
        temp->next->prev = new1;
    }
    temp->next = new1;
}

void delete_loc() {
    int ele;
    if (start == NULL) {
        printf("Doubly Linked list is empty\n");
        return;
    }
    printf("Enter element: ");
    scanf("%d", &ele);

    node *temp = start;
    if (start->data == ele) {
        start = start->next;
        if (start != NULL) {
            start->prev = NULL;
        }
        free(temp);
        return;
    }

    while (temp != NULL && temp->data != ele) {
        temp = temp->next;
    }

    if (temp == NULL) {
        printf("Element not found\n");
        return;
    }

    if (temp->next != NULL) {
        temp->next->prev = temp->prev;
    }
    if (temp->prev != NULL) {
        temp->prev->next = temp->next;
    }
    free(temp);
}

void display_dll() {
    node *temp = start;
    if (temp == NULL) {
        printf("Doubly Linked list is empty\n");
        return;
    }

    printf("Doubly Linked List: ");
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}

int main() {
    while (1) {
        printf("1. Create DLL\t2. Insert at left\t3. Delete given element\t4. Display DLL\t5. Exit\nEnter your choice: ");
        int ch;
        scanf("%d", &ch);

        switch (ch) {
            case 1: create_dll();
                    break;
            case 2: insert_left();
                    break;
            case 3: delete_loc();
                    break;
            case 4: display_dll();
                    break;
            case 5: exit(0);
            default: printf("Invalid choice\n");
        }
    }
    return 0;
}
